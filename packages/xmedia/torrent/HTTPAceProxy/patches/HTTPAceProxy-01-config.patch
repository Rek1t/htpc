diff -Naurp HTTPAceProxy-4e95af6/aceconfig.py HTTPAceProxy-4e95af6-patch/aceconfig.py
--- HTTPAceProxy-4e95af6/aceconfig.py	2018-03-06 10:08:45.000000000 +0200
+++ HTTPAceProxy-4e95af6-patch/aceconfig.py	2018-03-12 09:23:02.000000000 +0200
@@ -36,7 +36,7 @@ class AceConfig(acedefconfig.AceDefConfi
     # On Windows Ace Engine refreshes acestream.port file only after loading GUI
     # Loading takes about ~10-15 seconds and we need to wait before taking port out of it
     # Set this to 0 if you don't use proxy at startup or don't need to wait
-    acestartuptimeout = 10
+    acestartuptimeout = 3
     # Ace Stream Engine connection timeout
     aceconntimeout = 5
     # Ace Stream Engine authentication result & API port answers timeout
@@ -130,14 +130,14 @@ class AceConfig(acedefconfig.AceDefConfi
     # Logging configuration
     #
     # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
-    loglevel = logging.DEBUG
+    loglevel = logging.INFO
     # Log message forma
     logfmt = '%(filename)-20s [LINE:%(lineno)-4s]# %(levelname)-8s [%(asctime)s]  %(message)s'
     # Log date forma
     logdatefmt='%d.%m %H:%M:%S'
     # Full path to a log file
     # For Windows OS something like that logfile = "c:\\Python27\\log_AceHttp.txt"
-    logfile = None
+    logfile = '/var/log/aceproxy.log'
 
     # This method is used to detect fake requests. Some players send such
     # requests in order to detect the MIME type and/or check the stream availability.
diff -Naurp HTTPAceProxy-4e95af6/acedefconfig.py HTTPAceProxy-4e95af6-patch/acedefconfig.py
--- HTTPAceProxy-4e95af6/acedefconfig.py	2018-03-06 10:08:45.000000000 +0200
+++ HTTPAceProxy-4e95af6-patch/acedefconfig.py	2018-03-12 09:23:02.000000000 +0200
@@ -3,7 +3,7 @@ AceProxy default configuration script
 DO NOT EDIT THIS FILE!
 Copy this file to aceconfig.py and change only needed options.
 '''
-import logging, colorer
+import logging
 import platform
 from aceclient.acemessages import AceConst
 
@@ -22,7 +22,7 @@ class AceDefConfig(object):
     acestartuptimeout = 10
     aceconntimeout = 5
     aceresulttimeout = 5
-    httphost='0.0.0.0'
+    httphost='0.0.0.0' # 'auto' - for autodetected ext IP
     httpport = 8000
     readchunksize = 8192
     readcachesize = 1024
diff -Naurp HTTPAceProxy-4e95af6/acehttp.py HTTPAceProxy-4e95af6-patch/acehttp.py
--- HTTPAceProxy-4e95af6/acehttp.py	2018-03-06 10:08:45.000000000 +0200
+++ HTTPAceProxy-4e95af6-patch/acehttp.py	2018-03-11 15:51:16.000000000 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/python2
+#!/usr/bin/python
 # -*- coding: utf-8 -*-
 '''
 AceProxy: Ace Stream to HTTP Proxy
@@ -673,9 +673,11 @@ if AceConfig.acespawn or AceConfig.trans
    DEVNULL = open(os.devnull, 'wb')
 
 #### Initial settings for AceHTTPproxy host IP
-if AceConfig.httphost == '0.0.0.0':
+if AceConfig.httphost == 'auto':
    AceConfig.httphost = [(s.connect(('8.8.8.8', 53)), s.getsockname()[0], s.close()) for s in [socket(AF_INET, SOCK_DGRAM)]][0][1]
-   logger.debug('Ace Stream HTTP Proxy server IP: %s autodetected' % AceConfig.httphost)
+   logger.info('Ace Stream HTTP Proxy server IP: %s autodetected' % AceConfig.httphost)
+else:
+   logger.info('Ace Stream HTTP Proxy server IP: %s' % AceConfig.httphost)
 
 # Check whether we can bind to the defined port safely
 if AceConfig.osplatform != 'Windows' and os.getuid() != 0 and AceConfig.httpport <= 1024:
@@ -711,41 +713,32 @@ except AttributeError:
     pass
 
 #### AceEngine startup
-if AceConfig.osplatform == 'Windows':
-     name = 'ace_engine.exe'
-else:
-     name = 'acestreamengine'
-ace_pid = findProcess(name)
+ace_pid = findProcess('acestreamengine')
 AceStuff.ace = None
 if not ace_pid:
     if AceConfig.acespawn:
-        if AceConfig.osplatform == 'Windows':
-            import _winreg
-            import os.path
-            AceStuff.aceProc = ""
-        else:
-            AceStuff.aceProc = AceConfig.acecmd.split()
+        AceStuff.aceProc = AceConfig.acecmd.split()
         if spawnAce(AceStuff.aceProc, 1):
             ace_pid = AceStuff.ace.pid
             AceStuff.ace = psutil.Process(ace_pid)
 else:
     AceStuff.ace = psutil.Process(ace_pid)
 
-# Wait some time for ace engine sturtup .....
-if ace_pid :
-    gevent.sleep(AceConfig.acestartuptimeout)
-    logger.info("Ace Stream engine spawned with pid %s" % AceStuff.ace.pid)
-    # refresh the acestream.port file for Windows only after full loading...
-    if AceConfig.osplatform == 'Windows':
-       detectPort()
+if not ace_pid :
+    logging.error("Ace Stream engine is not running: Exit")
+    exit()
+    
+logger.info("Ace Stream engine spawned with pid %s" % AceStuff.ace.pid)    
+
 # Create Ace
 try:
-    logger.info("Create Ace Stream engine connection .....")
+    logger.info("Try create Ace Stream engine connection .....")
     with AceStuff.clientcounter.lock:
        if not AceStuff.clientcounter.idleace:
             AceStuff.clientcounter.idleace = AceStuff.clientcounter.createAce()
 except:
-    logging.error("Failed to create Ace Stream engine connection")
+    logging.error("Failed to create Ace Stream engine connection: Exit")
+    exit()
 
 # Loading plugins
 # Trying to change dir (would fail in freezed state)
diff -Naurp HTTPAceProxy-4e95af6/README.md HTTPAceProxy-4e95af6-patch/README.md
--- HTTPAceProxy-4e95af6/README.md	2018-03-06 10:08:45.000000000 +0200
+++ HTTPAceProxy-4e95af6-patch/README.md	1970-01-01 03:00:00.000000000 +0300
@@ -1 +0,0 @@
-# HTTPAceProxy
