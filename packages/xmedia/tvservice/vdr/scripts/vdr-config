#!/bin/sh
################################################################################
#      This file is part of Alex@ELEC - http://www.alexelec.in.ua
#      Copyright (C) 2011-present Alexandr Zuyev (alex@alexelec.in.ua)
################################################################################

. /etc/profile

SERVICE_DIR="/storage/.cache/services"
VDR_CONFIG_DIR="/storage/.config/vdr"

# Tvheadend stop
if [ -f "$SERVICE_DIR/tvheadend.conf" ]; then
  TVH_HOME="/storage/.config/tvheadend"
  if [ -f "$TVH_HOME/tvh.conf" ]; then
      . $TVH_HOME/tvh.conf
      [ "$TVH_LIVE" != "yes" ] && systemctl stop tvheadend.service
  else
      systemctl stop tvheadend.service
  fi
fi

[ -f "$SERVICE_DIR/vdr.conf" ] && . $SERVICE_DIR/vdr.conf
[ -f "$SERVICE_DIR/dvb.conf" ] && . $SERVICE_DIR/dvb.conf
[ -f "$SERVICE_DIR/locale.conf" ] && . $SERVICE_DIR/locale.conf
[ -f "$VDR_CONFIG_DIR/vdr-options.conf" ] && . $VDR_CONFIG_DIR/vdr-options.conf

[ -z "$SYS_LOCALE" ] && SYS_LOCALE="ru_RU.UTF-8"

  VDR_ARGS="--lirc=/run/lirc/lircd"

  [ -n "$VDR_DVB" ] && VDR_ARGS="$VDR_ARGS $VDR_DVB"

  if [ "$VDR_DEBUG" == "1" ]; then
      VDR_ARGS="$VDR_ARGS --log=3"
  else
      VDR_ARGS="$VDR_ARGS --log=1"
  fi

  if [ -d "$VDR_VIDEO_DIR" ]; then
      VDR_ARGS="$VDR_ARGS --video=\'$VDR_VIDEO_DIR\'"
  fi

  if [ -n "$SOFTHD_ARGS" ]; then
      VDR_ARGS="$VDR_ARGS -P'softhddevice -v vdpau $SOFTHD_ARGS'"
  else
      VDR_ARGS="$VDR_ARGS -P'softhddevice -v vdpau'"
  fi

  VDR_ARGS="$VDR_ARGS -P epgsearch -P femon -P systeminfo -P sleeptimer"

  [ "$VDR_DVBAPI" == "1" ] && VDR_ARGS="$VDR_ARGS -P'dvbapi -d'"
  [ "$VDR_IPTV" == "1" ] && VDR_ARGS="$VDR_ARGS -P iptv"
  [ "$VDR_VNSI" == "1" ] && VDR_ARGS="$VDR_ARGS -P vnsiserver"
  [ "$VDR_STREAMDEV_SERVER" == "1" ] && VDR_ARGS="$VDR_ARGS -P streamdev-server"
  [ "$VDR_STREAMDEV_CLIENT" == "1" ] && VDR_ARGS="$VDR_ARGS -P streamdev-client -P epgsync -P svdrpservice"
  [ "$VDR_CHSCAN" == "1" ] && VDR_ARGS="$VDR_ARGS -P channelscan"
  [ "$VDR_SKIN" == "1" ] && VDR_ARGS="$VDR_ARGS -P skindesigner -P weatherforecast"

  if [ "$VDR_LIVE" == "1" ]; then
      mkdir -p /storage/.cache/vdr/epgimages
      VDR_ARGS="$VDR_ARGS -P'live --ip=0.0.0.0 -e /storage/.cache/vdr/epgimages'"
      if [ ! -e /storage/.config/vdr/plugins/live/live.pem ] || [ ! -e /storage/.config/vdr/plugins/live/live-key.pem ]; then
          openssl req -new -x509 -nodes -days 9999 -batch -subj "/" -outform pem -out /storage/.config/vdr/plugins/live/live.pem -keyout /storage/.config/vdr/plugins/live/live-key.pem > /dev/null 2>&1
      fi
  fi

  if [ "$VDR_XMLTV" == "1" ]; then
      grep -q " /var/run/vdr " /proc/mounts || ( mkdir -p /var/run/vdr && mount -t tmpfs -o size=10% tmpfs /var/run/vdr )
      [ -h /var/lib/epgsources ] || ln -sf $VDR_CONFIG_DIR/plugins/xmltv2vdr/epgsources /var/lib/epgsources
      VDR_ARGS="$VDR_ARGS -P'xmltv2vdr --epgfile=/storage/.config/vdr/plugins/xmltv2vdr/epg.db --logfile=/var/log/xmltv2vdr.log'"
  fi

  [ -n "$VDR_PLUGINS" ] && VDR_ARGS="$VDR_ARGS $VDR_PLUGINS"

# refresh rate 50hz
if [ "$VDR_50HZ" == "1" ]; then
  # connected Output
  DISP=$(xrandr |grep ' connected' | awk '{print $1}')
  # current resolution
  RES=$(xrandr --verbose | grep '*current' | awk '{print $1}')
  (
    while [ $(pidof kodi.bin) ]; do
      usleep 500000
    done
    xrandr --output $DISP --mode $RES --rate 50
    logger -t vdr "set display mode: $DISP $RES 50hz"
  ) &
fi

echo "SYS_LOCALE=\"$SYS_LOCALE\"" > /run/alexelec/vdr.conf
echo "VDR_ARGS=\"$VDR_ARGS\"" >> /run/alexelec/vdr.conf

# wait for DVB
if [ "$DVB_WAIT" == "1" ] ; then
  TIMEOUT=30
  for i in $(seq 1 $TIMEOUT) ; do
    [ -e /dev/dvb/adapter0/frontend0 ] && break
    sleep 1
  done
fi

exit 0
